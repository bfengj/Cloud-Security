[#ftl]

[#include "maintenance-stuff.ftl"]

[@maintenancePage title="Restore from Backup" showStageStatus=false]

  <form id="target">
    <p>
      A newer version of TeamCity can be used to restore the backup created with any previous TeamCity version (provided that the TeamCity version is later than 6.0).
        [@helpIcon link="restoring-teamcity-data-from-backup#RestoringTeamCityDatafromBackup-Performingrestore"/]
    </p>
    <div class="setting-part" onmouseup="$('#server').trigger('click')">
      <input id="server" type="radio" name="backupFile" value="server" style="vertical-align: middle;">
      <label>Use an absolute path to the backup file on the server</label>
      <div class="input">
         [#if ctx.backupFilePath ??]
            <input id="backupFileLocation" type="text" name="backupFileName" value="${ctx.backupFilePath?html}" autocomplete="off">
         [#else]
            <input id="backupFileLocation" type="text" name="backupFileName" autocomplete="off">
         [/#if]
      </div>
    </div>
    <div class="setting-part">
      <input id="local" type="radio" name="backupFile" value="local" style="vertical-align: middle;">
      <label onmouseup="$('#local').trigger('click')">Upload a ZIP file</label>
      <div class="input">
        <input id="backupFileUploaded" type="file" name="backupFileUploaded" accept=".zip">
      </div>
    </div>

    <div class="action-block">
      <input type="button"
             id="cancelButton"
             class="btn"
             onclick="return cancel()"
             value="Cancel"/>
      <input type="button"
           id="proceedButton"
           class="btn btn_primary"
           onclick="return goToDatabaseSettings()"
           value="Proceed"
           disabled="disabled" />
      <span class="icon-refresh icon-spin ring-loader-inline"></span>
    </div>
  </form>

<script type="application/javascript">

  $('span.icon-refresh').hide();
  $("#backupFileUploaded").attr("disabled", "disabled");
  $("#backupFileLocation").removeAttr("disabled");
  $("#server").prop("checked", true);
  checkState();

  function cancel() {
    BS.Maintenance.postCommandAndRefresh('goFirstPage');
  }

  $('input[type=radio][name=backupFile]').change(function() {
    if (this.value == 'local') {
      $("#backupFileLocation").attr("disabled", "disabled");
      $("#backupFileUploaded").removeAttr("disabled");
    }
    else if (this.value == 'server') {
      $("#backupFileUploaded").attr("disabled", "disabled");
      $("#backupFileLocation").removeAttr("disabled");
    }
  });

  function goToDatabaseSettings() {
    $('span.icon-refresh').show();
    $("#target :input").prop("disabled", true);

    var formdata = new FormData();
    if (isBackupUploaded()) {
      var file = $("#backupFileUploaded")[0].files[0];
      formdata.append("backupFileUploaded", file);
    }
    if (isBackupServerPathSelected()) {
      formdata.append("backupFileLocation", $("#backupFileLocation").val())
    }
    var ajax = new XMLHttpRequest();
    ajax.addEventListener("load", completeHandler, false);

    ajax.open("POST", "mnt/do/goRestoreDatabaseSettings");
    ajax.send(formdata);
  }

  function isBackupUploaded() {
    return $("#backupFileUploaded").val().length > 0 && $('#local')[0].checked
  }

  function isBackupServerPathSelected() {
    return $("#backupFileLocation").val().length > 0 && $('#server')[0].checked
  }

  function completeHandler(event) {
    BS.Maintenance.refreshPage();
  }

  function checkState() {
    var fileNameSelected = isBackupUploaded() || isBackupServerPathSelected();
    if (fileNameSelected)
      $("#proceedButton").removeAttr('disabled');
    else
      $("#proceedButton").attr('disabled', 'disabled');
  }

  $("input").on("change keyup input paste cut", checkState);

  </script>

  <style type="text/css">
      .btn {
        margin-right: 1ex;
      }

      div.setting-part {
        margin-top: 2ex;
        margin-bottom: 2ex;
      }

      div.setting-part > * {
        vertical-align: text-top;
        display: inline-block;
      }

      div.setting-part label {
        display: inline-block;
        font-weight: bold;
      }

      div.input {
        width: 505px;
        margin-bottom: 7px;
        margin-top: 7px;
        margin-left: 20px;
      }

      div.input input {
        width: inherit;
      }

      input[type=text] {
        vertical-align: middle; width: 15px;
      }

      div.setting-value {
        display: inline-block;
      }

    </style>

[/@maintenancePage]
