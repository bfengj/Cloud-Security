[#ftl]

  <label id="dbType-label" for="dbType">
    <strong>Select the database type<span class="mandatory-asterisk">*</span>:</strong>
  </label>

  <select id="dbType" name="dbType" [#--onchange="changeDBSection()"--] >
    <option value="HSQLDB2">Internal (HSQLDB)</option>
    <option value="POSTGRESQL">PostgreSQL</option>
    <option value="MYSQL">MySQL</option>
    <option value="ORACLE">Oracle</option>
    <option value="MSSQL">MS SQL Server</option>
  </select>


  <div id="settings" class="db-none">

    <p class="db-depend for-POSTGRESQL for-MYSQL for-ORACLE for-MSSQL">
      Refer to the [@helpLink link="Supported+Platforms+and+Environments#SupportedPlatformsandEnvironments-SupportedDatabases"]TeamCity documentation[/@helpLink] for information on the supported database versions.
    </p>

    <div id="db-HSQLDB2" class="db-depend for-HSQLDB2">

      <p>
        The internal database suits evaluation purposes only and is not intended for production.
        We strongly recommend using an external database in a production environment.[@helpIcon link='Setting+up+an+External+Database'/]
      </p>
      <p>
        You can start with the internal database and then migrate the data to an external one after successful evaluation.
      </p>

    </div>


    <div id="db-POSTGRESQL" class="db-section db-depend for-POSTGRESQL">

        [#if specificInfo.jdbcDriverVersionForPostgre??]
          <p>Loaded PostgreSQL JDBC driver version: ${specificInfo.jdbcDriverVersionForPostgre}</p>
        [#else]
          <div>To connect to a PostgreSQL server TeamCity requires a JDBC driver.</div>
            [#if specificInfo.jdbcDriverMetadataForPostgreSql??]
                [#assign metadata = specificInfo.jdbcDriverMetadataForPostgreSql]
                [#assign driverName = "PostgreSQL"]
                [#include 'jdbc-driver-metadata.ftl']
            [/#if]
            [#include 'manual-download-instructions-postgresql.ftl']
        [/#if]

    </div>


    <div id="db-MYSQL" class="db-section db-depend for-MYSQL">

        [#if specificInfo.jdbcDriverVersionForMySQL??]
          <p>Loaded MySQL JDBC driver version: ${specificInfo.jdbcDriverVersionForMySQL}</p>
        [#else]
          <div>To connect to a MySQL server TeamCity requires a JDBC driver.</div>
            [#if specificInfo.driverDownloadingEnabled]
                [#if specificInfo.jdbcDriverMetadataForMySql??]
                    [#assign metadata = specificInfo.jdbcDriverMetadataForMySql]
                    [#assign driverName = "MySQL Connector/J"]
                    [#include 'jdbc-driver-metadata.ftl']
                [/#if]
            [/#if]
            [#include 'manual-download-instructions-mysql.ftl']
        [/#if]

    </div>


    <div id="db-ORACLE" class="db-section db-depend for-ORACLE">

        [#if specificInfo.jdbcDriverVersionForOracle??]
          <p>Loaded Oracle JDBC driver version: ${specificInfo.jdbcDriverVersionForOracle}</p>
        [#else]
          <div>To connect to an Oracle server TeamCity requires a JDBC driver.</div>
            [#if specificInfo.driverDownloadingEnabled]
                [#if specificInfo.jdbcDriverMetadataForOracle??]
                    [#assign metadata = specificInfo.jdbcDriverMetadataForOracle]
                    [#assign driverName = "Oracle"]
                    [#include 'jdbc-driver-metadata.ftl']
                [/#if]
            [/#if]
            [#include 'manual-download-instructions-oracle.ftl']
        [/#if]

    </div>


    <div id="db-MSSQL" class="db-section db-depend for-MSSQL">

        [#if specificInfo.jdbcDriverVersionForMSSQL??]
          <p>Loaded MS SQL Server JDBC driver version: ${specificInfo.jdbcDriverVersionForMSSQL}</p>
        [#else]
          <div>To connect to a MS SQL Server TeamCity requires a JDBC driver.</div>
            [#if specificInfo.driverDownloadingEnabled]
                [#if specificInfo.jdbcDriverMetadataForMsSql??]
                    [#assign metadata = specificInfo.jdbcDriverMetadataForMsSql]
                    [#assign driverName = "MS SQL Server"]
                    [#include 'jdbc-driver-metadata.ftl']
                [/#if]
            [#else]
            [/#if]
            [#include 'manual-download-instructions-mssql.ftl']
        [/#if]

    </div>

    <div class="db-depend for-POSTGRESQL for-ORACLE for-MSSQL for-MYSQL refresh-button db-manual">
      <input type="button" class="btn" value="Refresh JDBC driver" onclick="return refreshJdbcDrivers()"/>
    </div>

    <div id="settings-parts" class="db-depend for-POSTGRESQL for-MYSQL for-ORACLE for-MSSQL">

      <div id="conn-host-cell" class="setting-part">
        <label for="conn-host">Database host[:port]:</label>
        <div class="db-settings-control">
          <input id="conn-host"
                 name="connHost"
                 type="text"
                 value="${(specificInfo.connectionString.hostAndPort!'')?html}"><br/>
          <span class="gray-note">Optional. If omitted, the localhost and default port will be used.</span>
        </div>
      </div>

      <div id="conn-inst-cell" class="setting-part db-depend for-ORACLE for-MSSQL">
        <label for="conn-inst">Database <span class="db-depend for-MSSQL">Instance</span> <span class="db-depend for-ORACLE">Service</span> name<span class="mandatory-asterisk db-depend for-ORACLE">*</span>:</label>
        <div class="db-settings-control">
          <input id="conn-inst"
                 name="connInst"
                 type="text"
                 value="${(specificInfo.connectionString.inst!'')?html}"><br/>
          <span class="gray-note db-depend for-MSSQL">Optional. If omitted, the default one will be used.</span>
        </div>
      </div>

      <div id="conn-dbname-cell" class="setting-part db-depend for-POSTGRESQL for-MYSQL for-MSSQL">
        <label for="conn-dbname">Database name<span class="mandatory-asterisk db-depend for-MYSQL">*</span>:</label>
        <div class="db-settings-control">
          <input id="conn-dbname"
                 name="connDB"
                 type="text"
                 value="${(specificInfo.connectionString.database!'')?html}"><br/>
          <span class="gray-note db-depend for-MSSQL for-POSTGRESQL">Optional. If omitted, the user's default database will be used.</span>
        </div>
      </div>

      <div id="conn-intsecurity-cell" class="setting-part db-depend for-MSSQL">
        <label for="conn-intsecurity">Authentication method<span class="mandatory-asterisk">*</span>:</label>
        <div class="db-settings-control">
          <select id="conn-intsecurity"
                  name="connIntegratedSecurity"
                  onkeypress="changeSubSections()"
                  onchange="changeSubSections()">
            <option value="-">-- Please choose authentication method --</option>
            <option value="1">Windows authentication (integrated security)</option>
            <option value="0">SQL authentication (by login and password)</option>
          </select><br/>
        </div>
      </div>

      <p class="db-depend for-MSSQL only-int-security">
        If JDBC driver has been installed manually then integrated security option might require additional driver setup.
        Refer to the [@helpLink link="Setting+up+TeamCity+with+MS+SQL+Server#SettingupTeamCitywithMSSQLServer-integratedSecurityAuth"]TeamCity documentation[/@helpLink] for details.
      </p>

      <div id="conn-user-cell" class="setting-part hide-on-skip-credentials">
        <label for="conn-user"><span id="conn-user-label-phrase"><span class="db-depend for-POSTGRESQL for-MYSQL">User name</span><span class="db-depend for-ORACLE">User/Schema name</span><span class="db-depend for-MSSQL">Login</span><span class="mandatory-asterisk db-depend for-MSSQL">*</span>:</label>
        <div class="db-settings-control">
          <input id="conn-user"
                 name="connUser"
                 type="text"
                 value="${(specificInfo.connectionString.user!'')?html}">
        </div>
      </div>

      <div id="conn-pwd-cell" class="setting-part hide-on-skip-credentials">
        <label for="conn-pwd">Password<span class="mandatory-asterisk db-depend for-MSSQL">*</span>:</label>
        <div class="db-settings-control">
          <input style="display:none" type="text" value=" "/>
          <input style="display:none" type="password" value=" "/>
          <input id="conn-pwd"
                 name="connPwd"
                 type="password"
                 maxlength="60"
                 autocomplete="off"
                 value="${(specificInfo.connectionString.password!'')?html}">
        </div>
      </div>

    </div>


    <div id="settings-connection-string" class="db-depend for-URL" style="display: none">
      <label for="conn-string">Connection string<span class="mandatory-asterisk">*</span>:</label>
      <input id="conn-string" type="text" onkeypress="checkState()" onchange="checkState()">
    </div>


  </div>


<script type="text/javascript">

  state = {
    listener: function() {},
    nofityChange: function(){
      this.listener();
    },
    registerListener: function(listener) {
      this.listener = listener;
    }
  };

  function changeDBSection() {
    var db = $("#dbType").val();

    [#if specificInfo.driverDownloadingEnabled]
    $('.db-manual').hide();
    $('.db-manual-toggle').hide();
    $('#refresh-button').hide();

    var $downloadDriverButton = $(".download-button");
    switch (db) {
      case 'POSTGRESQL':
      [#if !specificInfo.jdbcDriverVersionForPostgre?? && specificInfo.jdbcDriverMetadataForPostgreSql??]
        $downloadDriverButton.show();
        $('.db-manual-toggle').show();
      [#else]
        $downloadDriverButton.hide();
        $('.db-manual.for-' + db).show();
      [/#if]
        break;
      case 'MYSQL':
      [#if !specificInfo.jdbcDriverVersionForMySQL?? && specificInfo.jdbcDriverMetadataForMySql??]
        $downloadDriverButton.show();
        $('.db-manual-toggle').show();
      [#else]
        $downloadDriverButton.hide();
        $('.db-manual.for-' + db).show();
      [/#if]
        break;
      case 'ORACLE':
      [#if !specificInfo.jdbcDriverVersionForOracle?? && specificInfo.jdbcDriverMetadataForOracle??]
        $downloadDriverButton.show();
        $('.db-manual-toggle').show();
      [#else]
        $downloadDriverButton.hide();
        $('.db-manual.for-' + db).show();
      [/#if]
        break;
      case 'MSSQL':
      [#if !specificInfo.jdbcDriverVersionForMSSQL?? && specificInfo.jdbcDriverMetadataForMsSql??]
        $downloadDriverButton.show();
        $('.db-manual-toggle').show();
      [#else]
        $downloadDriverButton.hide();
        $('.db-manual.for-' + db).show();
      [/#if]
        break;
      default:
        break;
    }
    [/#if]

    var settingsClass = "db-" + db;
    $("#settings").attr("class", settingsClass);

    changeSubSections();
  }

  function changeSubSections() {
    var db = $("#dbType").val();

    var skipCredentials, intSec;
    switch (db) {
      case 'HSQLDB2':
        skipCredentials = true;
        intSec = false;
        break;
      case 'MSSQL':
        var authMethod = $('#conn-intsecurity').val();
        skipCredentials = authMethod != '0';
        intSec = authMethod == '1';
        break;
      default:
        skipCredentials = intSec = false;
    }

    switchClass("#settings-parts", "skip-credentials", skipCredentials);
    switchClass("#settings-parts", "int-security", intSec);

    checkState();
    saveUserInput();
  }

  function switchClass(selector, clazz, flag) {
    var element = $(selector);
    if (flag) element.addClass(clazz);
    else element.removeClass(clazz);
  }

  function getTypedConnValues() {
    return {
      host: $("#conn-host").val(),
      inst: $("#conn-inst").val(),
      dbname: $("#conn-dbname").val(),
      authmethod: $("#conn-intsecurity").val(),
      user: $("#conn-user").val(),
      pwd: $("#conn-pwd").val()
    }
  }

  function saveUserInput() {
    BS.Maintenance.postCommand('saveUserInputOnDBsettingsPage', getSerializedForm());
  }

  function refreshJdbcDrivers() {
    BS.Maintenance.postCommandAndRefresh('refreshJdbcDrivers', getSerializedForm());
    return false;
  }

  /**
   * @returns {boolean}
   * @since 2018.1
   */
  function downloadJdbcDrivers() {
    "use strict";
    BS.Maintenance.postCommandAndRefresh('downloadJdbcDrivers', getSerializedForm());
    return false;
  }

  function getSerializedForm() {
    var form = $("form");
    return form.find(":input:not(:hidden)").serializeArray()
  }

  function checkCanProceed() {
    var db = $("#dbType").val();
    var connValues = getTypedConnValues();
    var ex = {
      host: !!connValues.host,
      inst: !!connValues.inst,
      dbname: !!connValues.dbname,
      intsec: connValues.authmethod == '1',
      sqlsec: connValues.authmethod == '0',
      user: !!connValues.user,
      pwd: !!connValues.pwd
    };

    return canProceed = db == 'HSQLDB2' ||
      db == 'POSTGRESQL' ||
      db == 'MYSQL' && ex.dbname ||
      db == 'ORACLE' && ex.inst ||
      db == 'MSSQL' && (ex.intsec || ex.sqlsec && ex.user && ex.pwd);
  }

  function checkState() {
    state.nofityChange();
  }

</script>

<script type="text/javascript">

  [#if specificInfo.connectionString.DBType?? && specificInfo.connectionString.DBType.name() != 'UNKNOWN']
  var sel = $('#dbType');
  [#if specificInfo.connectionString.DBType.isHSQL]
  sel.val('HSQLDB2');
  $('#conn-dbname').val(''); // reset database name, otherwise after the switch other databases will get name from HSQLDB
  [#else]
  sel.val('${specificInfo.connectionString.DBType.name()}');
  [/#if]
  [/#if]

  var intsec = $('#conn-intsecurity');
  [#if specificInfo.connectionString.integratedSecurity]
  intsec.val('1');
  [#elseif specificInfo.connectionString.isCredentialExist()]
  intsec.val('0');
  [/#if]

  changeDBSection();
  $("#dbType").on("change keyup", changeDBSection).focus();
  $("input").on("change keyup input paste cut", checkState);

</script>

<style type="text/css">

  #nestedPageContent {
    padding-right: 0.5em;
  }

  #settings.db-none { display: none }

  .db-depend { display: none; }
  [#if specificInfo.driverDownloadingEnabled]
  .db-manual { display: none; }
  [/#if]

  #settings.db-HSQLDB2    .db-depend.for-HSQLDB2    { display: block; }
  #settings.db-POSTGRESQL .db-depend.for-POSTGRESQL { display: block; }
  #settings.db-ORACLE     .db-depend.for-ORACLE     { display: block; }
  #settings.db-MYSQL      .db-depend.for-MYSQL      { display: block; }
  #settings.db-MSSQL      .db-depend.for-MSSQL      { display: block; }

  #settings.db-HSQLDB2    span.db-depend.for-HSQLDB2    { display: inline-block; }
  #settings.db-POSTGRESQL span.db-depend.for-POSTGRESQL { display: inline-block; }
  #settings.db-ORACLE     span.db-depend.for-ORACLE     { display: inline-block; }
  #settings.db-MYSQL      span.db-depend.for-MYSQL      { display: inline-block; }
  #settings.db-MSSQL      span.db-depend.for-MSSQL      { display: inline-block; }

  #settings .db-depend.only-int-security.for-MSSQL { display: none; }

  #settings #settings-parts.skip-credentials .hide-on-skip-credentials { display: none; }
  #settings #settings-parts.int-security .only-int-security.for-MSSQL      { display: block; }


  #dbType-label {
    min-width: 13em;
    display: inline-block;
    font-weight: bold;
  }


  div.setting-part {
    margin-top: 2ex;
    margin-bottom: 2ex;
  }

  div.setting-part > * {
    vertical-align: text-top;
  }


  div.setting-part label {
    width: 13em;
    display: inline-block;
    font-weight: bold;
  }

  div.setting-part input {
    width: 360px;
    margin-right: 1em;
  }

  div.setting-part select {
    width: 360px;
    margin-right: 1em;
  }

  .db-settings-control {
    display: inline-block;
  }

  #settings-connection-string input {
    width: 74em
  }

  .gray-note {
    color: gray;
  }

  .mandatory-asterisk {
    color: var(--ring-error-color);
  }

  TT {
    font-size: larger;
  }

  div ul {
    margin-top: 0.5ex;
    margin-bottom: 0.5ex;
  }

</style>
