[#ftl]
[#-- @ftlvariable name="" type="jetbrains.buildServer.maintenance.StartupPageModel" --]
[#-- @ftlvariable name="title" type="java.lang.String" --]
<head>

  <title>${title} &mdash; TeamCity</title>
  <link rel="shortcut icon" href="${webPrefix}/favicon.ico" type="image/x-icon"/>
  <meta http-equiv="content-type" content="text/html; charset=UTF-8"/>
  <meta name="application-name" content="TeamCity"/>
  <meta name="description" content="Powerful Continuous Integration and Build Server"/>
  <link href="${webPrefix}/css/FontAwesome/css/font-awesome.min.css" type="text/css" rel="stylesheet"/>
  <link href="${webPrefix}/css/main.css?v${ctx.productVersion.buildNumber?url('UTF-8')}" type="text/css" rel="stylesheet"/>
  <link href="${webPrefix}/css/icons.css?v${ctx.productVersion.buildNumber?url('UTF-8')}" type="text/css" rel="stylesheet"/>
  <link href="${webPrefix}/css/maintenance-initialPages-common.css?v${ctx.productVersion.buildNumber?url('UTF-8')}" type="text/css" rel="stylesheet"/>
  <link href="${webPrefix}/maintenance/maintenance.css?v${ctx.productVersion.buildNumber?url('UTF-8')}" type="text/css" rel="stylesheet"/>

  <script type="text/javascript" src="${webPrefix}/js/bs/ua.js"></script>
  <script type="text/javascript" src="${webPrefix}/js/ring/jquery.js"></script>
  <script type="text/javascript" src="${webPrefix}/js/ring/jquery-migrate.min.js"></script>
  <script type="text/javascript" src="${webPrefix}/js/jquery/jquery.z-index.js"></script>
  <script type="text/javascript" src="${webPrefix}/maintenance/maintenance.js"></script>
  <script type="text/javascript" src="${webPrefix}/js/clipboard.min.js"></script>
  <script type="text/javascript" src="${webPrefix}/js/bs/bs-clipboard.js"></script>
  [#if reactUISupported]
    <link href="${webPrefix}/css/react-ui.css" type="text/css" rel="stylesheet"/>
    <link href="${webPrefix}/js/ring/loaderInline.css" type="text/css" rel="stylesheet"/>
    <script type="text/javascript" src="${webPrefix}/js/ring/loaderInline.js"></script>

    <script>
      (function() {
        const Theme = {
          AUTO: 'auto',
          DARK: 'dark',
          LIGHT: 'light',
        };

        const darkClass = 'ring-ui-theme-dark';
        const setTheme = (theme) => document.documentElement.classList.toggle(darkClass, theme === Theme.DARK);

        const setGlobalTheme = (theme = Theme.AUTO) => {
          if (theme === Theme.AUTO) {
            const darkMatcher = window.matchMedia('(prefers-color-scheme: dark)');
            const handler = () => setTheme(darkMatcher.matches ? Theme.DARK : Theme.LIGHT);
            handler();
            darkMatcher.addEventListener('change', handler);
          } else {
            setTheme(theme);
          }
        };

        setGlobalTheme();
      })();
      (() => {
        localStorage.clear();

        try {
          caches
            .keys()
            .then(cacheNames => Promise.all(cacheNames.map(cacheName => caches.delete(cacheName))))
        } catch (error) {
          console.error('Error cleaning caches', e);
        }
      })()
    </script>
  [/#if]

  <script type="text/javascript">
    BS.Maintenance.webPrefix = "${webPrefix}";
    BS.Maintenance.stateRevision = ${specificInfo.stateRevision};
    BS.Maintenance.activeStage = ${specificInfo.currentStage.active?string("true", "false")};
  </script>

</head>

